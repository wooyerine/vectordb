{
	"request": {
		"collection": "leetcode_v2",
		"anns_field": "embedding",
		"param": {
			"metric_type": "L2",
			"params": {
				"ef": 64
			}
		},
		"limit": 5,
		"output_fields": [
			"problem_id",
			"title",
			"level",
			"description",
			"examples",
			"constraints"
		]
	},
	"response": [
		{
			"id": 2425,
			"distance": 0.5985168218612671,
			"entity": {
				"problem_id": 2425,
				"title": "Bitwise XOR of All Pairings",
				"level": "Medium",
				"description": "You are given two 0-indexed arrays, nums1 and nums2, consisting of non-negative integers. There exists another array, nums3, which contains the bitwise XOR of all pairings of integers between nums1 and nums2 (every integer in nums1 is paired with every integer in nums2 exactly once).\n\nReturn the bitwise XOR of all integers in nums3.",
				"examples": "Example 1:\n\n\nInput: nums1 = [2,1,3], nums2 = [10,2,5,0]\nOutput: 13\nExplanation:\nA possible nums3 array is [8,0,7,2,11,3,4,1,9,1,6,3].\nThe bitwise XOR of all these numbers is 13, so we return 13.\n\n\nExample 2:\n\n\nInput: nums1 = [1,2], nums2 = [3,4]\nOutput: 0\nExplanation:\nAll possible pairs of bitwise XORs are nums1[0] ^ nums2[0], nums1[0] ^ nums2[1], nums1[1] ^ nums2[0],\nand nums1[1] ^ nums2[1].\nThus, one possible nums3 array is [2,5,1,6].\n2 ^ 5 ^ 1 ^ 6 = 0, so we return 0.",
				"constraints": "Constraints:\n\n\n\t1 <= nums1.length, nums2.length <= 10^5\n\t0 <= nums1[i], nums2[j] <= 10^9"
			}
		},
		{
			"id": 2932,
			"distance": 0.6016254425048828,
			"entity": {
				"problem_id": 2932,
				"title": "Maximum Strong Pair XOR I",
				"level": "Easy",
				"description": "You are given a 0-indexed integer array nums. A pair of integers x and y is called a strong pair if it satisfies the condition:\n\n\n\t|x - y| <= min(x, y)\n\n\nYou need to select two integers from nums such that they form a strong pair and their bitwise XOR is the maximum among all strong pairs in the array.\n\nReturn the maximum XOR value out of all possible strong pairs in the array nums.\n\nNote that you can pick the same integer twice to form a pair.",
				"examples": "Example 1:\n\n\nInput: nums = [1,2,3,4,5]\nOutput: 7\nExplanation: There are 11 strong pairs in the array nums: (1, 1), (1, 2), (2, 2), (2, 3), (2, 4), (3, 3), (3, 4), (3, 5), (4, 4), (4, 5) and (5, 5).\nThe maximum XOR possible from these pairs is 3 XOR 4 = 7.\n\n\nExample 2:\n\n\nInput: nums = [10,100]\nOutput: 0\nExplanation: There are 2 strong pairs in the array nums: (10, 10) and (100, 100).\nThe maximum XOR possible from these pairs is 10 XOR 10 = 0 since the pair (100, 100) also gives 100 XOR 100 = 0.\n\n\nExample 3:\n\n\nInput: nums = [5,6,25,30]\nOutput: 7\nExplanation: There are 6 strong pairs in the array nums: (5, 5), (5, 6), (6, 6), (25, 25), (25, 30) and (30, 30).\nThe maximum XOR possible from these pairs is 25 XOR 30 = 7 since the only other non-zero XOR value is 5 XOR 6 = 3.",
				"constraints": "Constraints:\n\n\n\t1 <= nums.length <= 50\n\t1 <= nums[i] <= 100"
			}
		},
		{
			"id": 2317,
			"distance": 0.6020629405975342,
			"entity": {
				"problem_id": 2317,
				"title": "Maximum XOR After Operations",
				"level": "Medium",
				"description": "You are given a 0-indexed integer array nums. In one operation, select any non-negative integer x and an index i, then update nums[i] to be equal to nums[i] AND (nums[i] XOR x).\n\nNote that AND is the bitwise AND operation and XOR is the bitwise XOR operation.\n\nReturn the maximum possible bitwise XOR of all elements of nums after applying the operation any number of times.",
				"examples": "Example 1:\n\n\nInput: nums = [3,2,4,6]\nOutput: 7\nExplanation: Apply the operation with x = 4 and i = 3, num[3] = 6 AND (6 XOR 4) = 6 AND 2 = 2.\nNow, nums = [3, 2, 4, 2] and the bitwise XOR of all the elements = 3 XOR 2 XOR 4 XOR 2 = 7.\nIt can be shown that 7 is the maximum possible bitwise XOR.\nNote that other operations may be used to achieve a bitwise XOR of 7.\n\nExample 2:\n\n\nInput: nums = [1,2,3,9,2]\nOutput: 11\nExplanation: Apply the operation zero times.\nThe bitwise XOR of all the elements = 1 XOR 2 XOR 3 XOR 9 XOR 2 = 11.\nIt can be shown that 11 is the maximum possible bitwise XOR.",
				"constraints": "Constraints:\n\n\n\t1 <= nums.length <= 10^5\n\t0 <= nums[i] <= 10^8"
			}
		},
		{
			"id": 2935,
			"distance": 0.6137351989746094,
			"entity": {
				"problem_id": 2935,
				"title": "Maximum Strong Pair XOR II",
				"level": "Hard",
				"description": "You are given a 0-indexed integer array nums. A pair of integers x and y is called a strong pair if it satisfies the condition:\n\n\n\t|x - y| <= min(x, y)\n\n\nYou need to select two integers from nums such that they form a strong pair and their bitwise XOR is the maximum among all strong pairs in the array.\n\nReturn the maximum XOR value out of all possible strong pairs in the array nums.\n\nNote that you can pick the same integer twice to form a pair.",
				"examples": "Example 1:\n\n\nInput: nums = [1,2,3,4,5]\nOutput: 7\nExplanation: There are 11 strong pairs in the array nums: (1, 1), (1, 2), (2, 2), (2, 3), (2, 4), (3, 3), (3, 4), (3, 5), (4, 4), (4, 5) and (5, 5).\nThe maximum XOR possible from these pairs is 3 XOR 4 = 7.\n\n\nExample 2:\n\n\nInput: nums = [10,100]\nOutput: 0\nExplanation: There are 2 strong pairs in the array nums: (10, 10) and (100, 100).\nThe maximum XOR possible from these pairs is 10 XOR 10 = 0 since the pair (100, 100) also gives 100 XOR 100 = 0.\n\n\nExample 3:\n\n\nInput: nums = [500,520,2500,3000]\nOutput: 1020\nExplanation: There are 6 strong pairs in the array nums: (500, 500), (500, 520), (520, 520), (2500, 2500), (2500, 3000) and (3000, 3000).\nThe maximum XOR possible from these pairs is 500 XOR 520 = 1020 since the only other non-zero XOR value is 2500 XOR 3000 = 636.",
				"constraints": "Constraints:\n\n\n\t1 <= nums.length <= 5 * 10^4\n\t1 <= nums[i] <= 2^20 - 1"
			}
		},
		{
			"id": 136,
			"distance": 0.6400971412658691,
			"entity": {
				"problem_id": 136,
				"title": "Single Number",
				"level": "Easy",
				"description": "Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.\n\nYou must implement a solution with a linear runtime complexity and use only constant extra space.",
				"examples": "Example 1:\nInput: nums = [2,2,1]\nOutput: 1\nExample 2:\nInput: nums = [4,1,2,1,2]\nOutput: 4\nExample 3:\nInput: nums = [1]\nOutput: 1",
				"constraints": "Constraints:\n\n\n\t1 <= nums.length <= 3 * 10^4\n\t-3 * 10^4 <= nums[i] <= 3 * 10^4\n\tEach element in the array appears twice except for one element which appears only once."
			}
		}
	]
}
